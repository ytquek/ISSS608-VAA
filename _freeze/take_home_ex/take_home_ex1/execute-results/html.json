{
  "hash": "fbdfe5611527db4abdd33ce5df26831b",
  "result": {
    "markdown": "---\ntitle: \"Take Home Exercise 1\"\nauthor: \"You Ting Quek\"\ndate: \"April 15, 2024\"\ndate-modified: \"Last-Modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# Assignment Context\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S\\$14,000. For families with monthly household income more than S\\$14,000, they need to turn to the private residential market.\n\n# The Task\n\nAssuming the role of a graphical editor of a median company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024\n\n## Data Source\n\nTo accomplish the task, transaction data of REALIS (2023-2024) will be used.\n\n# Research\n\nPrior to kickstarting the project, the author must first do some preliminary research on the local property market in Singapore as well as the factors that may contribute to it's pricing.\n\nThe data provided by Realis are at it's crux Transaction data, the author upon further research understands there are other determinant factors such as :\n\n1.) Regions <https://www.propertyguru.com.sg/property-guides/ccr-ocr-rcr-region-singapore-ura-map-21045>\n\nwhich contributes significantly to the\n\n## Setting up the environment\n\n### Installing required packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggplot2, dplyr)\n```\n:::\n\n\n## Preparing the data\n\n### Raw Data Import\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the paths to the individual CSV files\nfile1 <- \"data/ResidentialTransaction20240308160536.csv\"\nfile2 <- \"data/ResidentialTransaction20240308160736.csv\"\nfile3 <- \"data/ResidentialTransaction20240308161009.csv\"\nfile4 <- \"data/ResidentialTransaction20240308161109.csv\"\nfile5 <- \"data/ResidentialTransaction20240414220633.csv\"\n\n# Reading the individual CSV files\ndata1 <- read_csv(file1)\ndata2 <- read_csv(file2)\ndata3 <- read_csv(file3)\ndata4 <- read_csv(file4)\ndata5 <- read_csv(file5)\n\n# Combining the data frames into one\ncombined_transaction <- bind_rows(data1, data2, data3, data4, data5)\n\n# Viewing the data structure given\ncol_names <- names(combined_transaction)\ncol_names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Project Name\"                \"Transacted Price ($)\"       \n [3] \"Area (SQFT)\"                 \"Unit Price ($ PSF)\"         \n [5] \"Sale Date\"                   \"Address\"                    \n [7] \"Type of Sale\"                \"Type of Area\"               \n [9] \"Area (SQM)\"                  \"Unit Price ($ PSM)\"         \n[11] \"Nett Price($)\"               \"Property Type\"              \n[13] \"Number of Units\"             \"Tenure\"                     \n[15] \"Completion Date\"             \"Purchaser Address Indicator\"\n[17] \"Postal Code\"                 \"Postal District\"            \n[19] \"Postal Sector\"               \"Planning Region\"            \n[21] \"Planning Area\"              \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse (combined_transaction)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 26,806\nColumns: 21\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n```\n:::\n:::\n\n\n### Duplicate checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicates <- combined_transaction %>% \n  filter(duplicated(.))\n\nglimpse(duplicates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 0\nColumns: 21\n$ `Project Name`                <chr> \n$ `Transacted Price ($)`        <dbl> \n$ `Area (SQFT)`                 <dbl> \n$ `Unit Price ($ PSF)`          <dbl> \n$ `Sale Date`                   <chr> \n$ Address                       <chr> \n$ `Type of Sale`                <chr> \n$ `Type of Area`                <chr> \n$ `Area (SQM)`                  <dbl> \n$ `Unit Price ($ PSM)`          <dbl> \n$ `Nett Price($)`               <chr> \n$ `Property Type`               <chr> \n$ `Number of Units`             <dbl> \n$ Tenure                        <chr> \n$ `Completion Date`             <chr> \n$ `Purchaser Address Indicator` <chr> \n$ `Postal Code`                 <chr> \n$ `Postal District`             <chr> \n$ `Postal Sector`               <chr> \n$ `Planning Region`             <chr> \n$ `Planning Area`               <chr> \n```\n:::\n:::\n\n\n::: callout-tip\n## Data Analysis\n\nUsing glimpse() as a dipstick to run through our duplicate() checks, we concluded that the data is very sanitised with 0 duplicated transactions.\n\nHowever we noted that there is an unsuitable data type for the field 'Sale Date' which will result in difficulty for us not being able to do filtering later on.\n:::\n\n### Filtering Q1 2024 data for Private properties\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_transaction$`Sale Date` <- dmy(combined_transaction$`Sale Date`)\n\n# Check the structure to ensure 'Sale Date' is now a Date object\nstr(combined_transaction)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [26,806 × 21] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Project Name               : chr [1:26806] \"THE REEF AT KING'S DOCK\" \"URBAN TREASURES\" \"NORTH GAIA\" \"NORTH GAIA\" ...\n $ Transacted Price ($)       : num [1:26806] 2317000 1823500 1421112 1258112 1280000 ...\n $ Area (SQFT)                : num [1:26806] 883 883 1076 1033 872 ...\n $ Unit Price ($ PSF)         : num [1:26806] 2625 2066 1320 1218 1468 ...\n $ Sale Date                  : Date[1:26806], format: \"2023-01-01\" \"2023-01-02\" ...\n $ Address                    : chr [1:26806] \"12 HARBOURFRONT AVENUE #05-32\" \"205 JALAN EUNOS #08-02\" \"29 YISHUN CLOSE #08-10\" \"45 YISHUN CLOSE #07-42\" ...\n $ Type of Sale               : chr [1:26806] \"New Sale\" \"New Sale\" \"New Sale\" \"New Sale\" ...\n $ Type of Area               : chr [1:26806] \"Strata\" \"Strata\" \"Strata\" \"Strata\" ...\n $ Area (SQM)                 : num [1:26806] 82 82 100 96 81 ...\n $ Unit Price ($ PSM)         : num [1:26806] 28256 22238 14211 13105 15802 ...\n $ Nett Price($)              : chr [1:26806] \"-\" \"-\" \"-\" \"-\" ...\n $ Property Type              : chr [1:26806] \"Condominium\" \"Condominium\" \"Executive Condominium\" \"Executive Condominium\" ...\n $ Number of Units            : num [1:26806] 1 1 1 1 1 1 1 1 1 1 ...\n $ Tenure                     : chr [1:26806] \"99 yrs from 12/01/2021\" \"Freehold\" \"99 yrs from 15/02/2021\" \"99 yrs from 15/02/2021\" ...\n $ Completion Date            : chr [1:26806] \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" ...\n $ Purchaser Address Indicator: chr [1:26806] \"HDB\" \"Private\" \"HDB\" \"HDB\" ...\n $ Postal Code                : chr [1:26806] \"097996\" \"419535\" \"269343\" \"269294\" ...\n $ Postal District            : chr [1:26806] \"04\" \"14\" \"27\" \"27\" ...\n $ Postal Sector              : chr [1:26806] \"09\" \"41\" \"26\" \"26\" ...\n $ Planning Region            : chr [1:26806] \"Central Region\" \"East Region\" \"North Region\" \"North Region\" ...\n $ Planning Area              : chr [1:26806] \"Bukit Merah\" \"Bedok\" \"Yishun\" \"Yishun\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `Project Name` = col_character(),\n  ..   `Transacted Price ($)` = col_number(),\n  ..   `Area (SQFT)` = col_number(),\n  ..   `Unit Price ($ PSF)` = col_number(),\n  ..   `Sale Date` = col_character(),\n  ..   Address = col_character(),\n  ..   `Type of Sale` = col_character(),\n  ..   `Type of Area` = col_character(),\n  ..   `Area (SQM)` = col_number(),\n  ..   `Unit Price ($ PSM)` = col_number(),\n  ..   `Nett Price($)` = col_character(),\n  ..   `Property Type` = col_character(),\n  ..   `Number of Units` = col_double(),\n  ..   Tenure = col_character(),\n  ..   `Completion Date` = col_character(),\n  ..   `Purchaser Address Indicator` = col_character(),\n  ..   `Postal Code` = col_character(),\n  ..   `Postal District` = col_character(),\n  ..   `Postal Sector` = col_character(),\n  ..   `Planning Region` = col_character(),\n  ..   `Planning Area` = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nQ1_2024_Private <- combined_transaction %>%\n  filter(`Sale Date` >= as.Date(\"2023-01-01\") & \n         `Sale Date` <= as.Date(\"2024-03-31\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Q1_2024_Private)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n  `Project Name`       `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n  <chr>                                 <dbl>         <dbl>                <dbl>\n1 THE REEF AT KING'S …                2317000          883.                 2625\n2 URBAN TREASURES                     1823500          883.                 2066\n3 NORTH GAIA                          1421112         1076.                 1320\n4 NORTH GAIA                          1258112         1033.                 1218\n5 PARC BOTANNIA                       1280000          872.                 1468\n6 NANYANG PARK                        5870000         3323.                 1767\n# ℹ 17 more variables: `Sale Date` <date>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>\n```\n:::\n:::\n\n\n## Binning Properties according to Region types defined by URA \\[THIS SECTION TBC\\]\n\n# Data Visualisation\n\n## PSF Distribution for private residential properties for 1st Quarter 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=Q1_2024_Private, \n       aes(x= `Unit Price ($ PSF)`, \n           fill = `Property Type`)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n```\n\n::: {.cell-output-display}\n![](take_home_ex1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=Q1_2024_Private, \n       aes(x = `Property Type`, \n           fill = `Property Type`)) +\n  geom_bar(color = \"grey30\") +\n  labs(x = \"Property Type\", y = \"Count\", title = \"Count of Property Types\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](take_home_ex1_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=Q1_2024_Private, \n       aes(x = `Unit Price ($ PSF)`)) +\n  geom_histogram(bins = 10, fill = \"skyblue\", color = \"black\") +\n  facet_grid(`Planning Region` ~ `Property Type`, scales = \"free_y\") +\n  labs(x = \"PSF Price\", y = \"Count\", title = \"Distribution of PSF Prices by Property Type and Region\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](take_home_ex1_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=Q1_2024_Private, \n       aes(x = `Unit Price ($ PSF)`, \n           fill = `Type of Sale`)) +\n  geom_histogram(position = \"dodge\", binwidth = 100) +  # Adjust binwidth as needed\n  facet_grid(`Planning Region` ~ `Property Type`) +\n  labs(x = \"PSF Price\", y = \"Count\", title = \"Distribution of PSF Prices by Property Type, Region, and Transaction Type\") +\n  scale_fill_brewer(palette = \"Set1\") +  # Use a color palette that is distinct\n  theme_minimal() +\n  theme(legend.position = \"bottom\")  # Adjust legend position as needed\n```\n\n::: {.cell-output-display}\n![](take_home_ex1_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n:::\n\n\n::: callout-tip\n### Observation from visualisation\n\nFrom the transaction volumes of Property Types segregated by the different regions, we observed that majority of the transactions happening in 2024 involves either Apartments or Condominiums in the Central Region.\n\nShifting gears into the types of sale, we can also observe that New Sale is very popular for Apartments in Central Region as well as Executive Condominiums in the West Region. This sentiment is also backed by [Straits Times](https://www.straitstimes.com/singapore/housing/first-executive-condo-launch-of-2024-sells-53-of-units)\n:::\n\n## Average Transaction Price by Region\n\nTo visualise the variation in average property prices across different regions in Singapore, we will use a choropleth map and shade each region according to its average property price which makes pricing differences immediately obvious.\n\nTo create the map, we will need the sub-zone boundary of URA Master Plan 2019 dataset as well as our own Q1_2024_Private dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap,sf, httr2, dplyr, future, furrr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncache <- new.env()\nplan(multisession)\n\nfetch_geocode_data <- function(postcode) {\n  # Check cache first\n  if (exists(postcode, envir = cache)) {\n    return(get(postcode, envir = cache))\n  }\n  \n  # API parameters\n  url <- \"https://www.onemap.gov.sg/api/common/elastic/search\"\n  query_params <- list(searchVal = postcode, returnGeom = 'Y', getAddrDetails = 'Y', pageNum = '1')\n\n  # API call with error handling\n  response <- tryCatch({\n    GET(url, query = query_params)\n  }, error = function(e) {\n    message(\"Error fetching data for postcode \", postcode, \": \", e$message)\n    return(NULL)\n  })\n\n  # Check if the API call was successful\n  if (is.null(response) || http_error(response)) {\n    return(data.frame(postcode = postcode, lat = NA, lon = NA))\n  }\n\n  # Parse response\n  content_data <- content(response, type = \"application/json\")\n\n  # Store in cache and return results\n  if (content_data$found > 0) {\n    lat <- content_data$results[[1]]$LATITUDE\n    lon <- content_data$results[[1]]$LONGITUDE\n    result <- data.frame(postcode = postcode, lat = lat, lon = lon)\n  } else {\n    result <- data.frame(postcode = postcode, lat = NA, lon = NA)\n  }\n\n  assign(postcode, result, envir = cache)\n  return(result)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Search 'Q1_2024_Private' dataframe for 'Postal Code' column\ndata_pc <- unique(Q1_2024_Private$`Postal Code`)\n\n# Use futures for asynchronous processing\nresults <- future_map(data_pc, fetch_geocode_data)\ncombined_results <- bind_rows(results)\n\n# Combine results and filter out unsuccessful ones\nsuccessful_results <- combined_results %>%\n  filter(!is.na(lat) & !is.na(lon))\n\n# Write results to a CSV file\nwrite.csv(successful_results, file = \"data/PostalCodeList.csv\", row.names = FALSE)\n```\n:::\n\n\n## Linking PostalCodeList to Transaction (Q1_2024_Private) Tibble\n\n::: {.cell}\n\n```{.r .cell-code}\nQ1_2024_Private_with_Coordinates <- Q1_2024_Private %>%\n  left_join(successful_results, by = c(\"Postal Code\" = \"postcode\"))\n```\n:::\n\n\n## Importing Geospatial Data\n### Load Map into MPSZ\n\n::: {.cell}\n\n```{.r .cell-code}\n# Instantiate the map from MPSZ 2019\nmpsz <- st_read(dsn = \"data/\",\n                layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MPSZ-2019' from data source \n  `/Users/youting/ytquek/ISSS608-VAA/take_home_ex/data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove rows where latitude or longitude is NA\nQ1_2024_Private_with_Coordinates <- Q1_2024_Private_with_Coordinates %>%\n  filter(!is.na(lat) & !is.na(lon))\n\nq1_2024_sf <- st_as_sf(Q1_2024_Private_with_Coordinates ,\n                       coords = c(\"lon\", \"lat\"),\n                       crs =4326) %>%\n  st_transform(crs = 3414)\n```\n:::\n\n## Extracting study data (Average Transacted Price)\nWe will filter out the column data - Transacted Price & Planning Area which is required for a drill-down analysis on consumer pattern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq1_avg_txn <- Q1_2024_Private_with_Coordinates %>%\n    group_by(`Planning Area`) %>%\n    summarise(Avg_Transacted_Price = mean(`Transacted Price ($)`, na.rm = TRUE))\n\nq1_avg_txn <- q1_avg_txn %>%\n    mutate(`Planning Area` = toupper(`Planning Area`))\n\nq1_avg_txn <- st_drop_geometry(q1_avg_txn)\n```\n:::\n\n\n## Geospatial Data Wrangling\n### Overlaying HoneyComb \n### Combining MPSZ & Average Transaction Price\n\n",
    "supporting": [
      "take_home_ex1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}