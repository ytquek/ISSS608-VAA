{
  "hash": "8f8cf73f1d231f60e3009dc5036870b3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"test\"\nauthor: \"yt\"\ndate: \"11 May, 2024\"\ndate-modified: last-modified\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, readtext, quanteda, tidytext, jsonlite, DT)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste0(\"Checking directory: \", \"/data/articles/*\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Checking directory: /data/articles/*\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(list.files(\"/data/articles/*\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncharacter(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_data = readtext(\"data/articles/*\")\nglimpse(text_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 338\nColumns: 2\n$ doc_id <chr> \"Alvarez PLC__0__0__Haacklee Herald.txt\", \"Alvarez PLC__0__0__L…\n$ text   <chr> \"Marine Sanctuary Aid Boosts Alvarez PLC's Sustainable Fishing …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nusenet_words <- text_data %>%\n  unnest_tokens(word, text) %>%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nusenet_words %>%\n  count(word, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nreadtext object consisting of 3261 documents and 0 docvars.\n# A data frame: 3,261 × 3\n  word             n text     \n  <chr>        <int> <chr>    \n1 fishing       2177 \"\\\"\\\"...\"\n2 sustainable   1525 \"\\\"\\\"...\"\n3 company       1036 \"\\\"\\\"...\"\n4 practices      838 \"\\\"\\\"...\"\n5 industry       715 \"\\\"\\\"...\"\n6 transactions   696 \"\\\"\\\"...\"\n# ℹ 3,255 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_data_splitted <- text_data %>%\n  separate_wider_delim(\"doc_id\",\n                       delim = \"__0__\",\n                       names = c(\"X\",\"Y\"),\n                       too_few = \"align_end\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}