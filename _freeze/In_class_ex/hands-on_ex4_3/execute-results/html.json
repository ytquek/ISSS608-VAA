{
  "hash": "5c66f8bdd5bb614c63a9a465d735f622",
  "result": {
    "markdown": "---\ntitle: \"Hands on Exercise 4 - Part 3\"\nauthor: \"You Ting QUEK\"\ndate: \"May 1, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# Objectives\n\nTo learn about Funnel plots which is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities.\n\n# Installing & running the packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n```\n:::\n\n\n## Importing the dat\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n```\n:::\n\n\n# FunnelPlotR methods\n\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\n-   `limit`: plot limits (95 or 99).\n\n-   `label_outliers`: to label outliers (true or false).\n\n-   `Poisson_limits`: to add Poisson limits to the plot.\n\n-   `OD_adjust`: to add overdispersed limits to the plot.\n\n-   `xrange` and `yrange`: to specify the range to display for axes, acts like a zoom function.\n\n-   Other aesthetic components such as graph title, axis labels etc.\n\n## Basic plot with FunnelPlotR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = `Positive`,\n  denominator = `Death`,\n  group = `Sub-district`\n)\n```\n\n::: {.cell-output-display}\n![](hands-on_ex4_3_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n```\n:::\n:::\n\n\nThings to learn from the code chunk above.\n\n-   `group` in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\n\n-   By default, `data_type`argument is “SR”.\n\n-   `limit`: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n## FunnelPlotR methods: Makeover 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = `Death`,\n  denominator = `Positive`,\n  group = `Sub-district`,\n  data_type = \"PR\",     #<<\n  x_range = c(0, 6500),  #<<\n  y_range = c(0, 0.05)   #<<\n)\n```\n\n::: {.cell-output-display}\n![](hands-on_ex4_3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n```\n:::\n:::\n\n\n## FunnelPlotR method: Makeover 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = `Death`,\n  denominator = `Positive`,\n  group = `Sub-district`,\n  data_type = \"PR\",\n  x_range = c(0, 6500),  \n  y_range = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)    \n```\n\n::: {.cell-output-display}\n![](hands-on_ex4_3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n```\n:::\n:::\n\n\nThings to learn from the code chunk above.\n\n-   `label = NA` argument is to removed the default label outliers feature.\n\n-   `title` argument is used to add plot title.\n\n-   `x_label` and `y_label` arguments are used to add/edit x-axis and y-axis titles.\n\n## Funnel Plot for Fair Visual Comparison: ggplot2 method\n### Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- covid19 %>%\n  mutate(rate = Death / Positive) %>%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %>%\n  filter(rate > 0)\n```\n:::\n",
    "supporting": [
      "hands-on_ex4_3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}